{
  "hash": "122e2f7246dee0c08ee021a9a1fae0f8",
  "result": {
    "markdown": "---\ntitle: \"Supervised ML - Regression (I) & (II)\"\nauthor: \"Davis Rakhshan\"\n---\n\n::: {.cell hash='02_supervised_ML_cache/html/unnamed-chunk-1_aa9c0633646739db81a28d002ad71e6c'}\n\n```{.r .cell-code}\n# Load libraries\nlibrary(tidyverse)\nlibrary(recipes)\nlibrary(workflows)\nlibrary(parsnip)\nlibrary(yardstick)\nlibrary(rsample)\n\n# Read data\nbike_features_tbl <- readRDS(\"../../scripts/data/bike_features_tbl.rds\")\nbike_features_tbl <- bike_features_tbl %>%\n  select(model:url, `Rear Derailleur`, `Shift Lever`) %>%\nmutate(\n  `shimano dura-ace`        = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano dura-ace \") %>% as.numeric(),\n  `shimano ultegra`         = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano ultegra \") %>% as.numeric(),\n  `shimano 105`             = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano 105 \") %>% as.numeric(),\n  `shimano tiagra`          = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano tiagra \") %>% as.numeric(),\n  `Shimano sora`            = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano sora\") %>% as.numeric(),\n  `shimano deore`           = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano deore(?! xt)\") %>% as.numeric(),\n  `shimano slx`             = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano slx\") %>% as.numeric(),\n  `shimano grx`             = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano grx\") %>% as.numeric(),\n  `Shimano xt`              = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano deore xt |shimano xt \") %>% as.numeric(),\n  `Shimano xtr`             = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano xtr\") %>% as.numeric(),\n  `Shimano saint`           = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"shimano saint\") %>% as.numeric(),\n  `SRAM red`                = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram red\") %>% as.numeric(),\n  `SRAM force`              = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram force\") %>% as.numeric(),\n  `SRAM rival`              = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram rival\") %>% as.numeric(),\n  `SRAM apex`               = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram apex\") %>% as.numeric(),\n  `SRAM xx1`                = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram xx1\") %>% as.numeric(),\n  `SRAM x01`                = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram x01|sram xo1\") %>% as.numeric(),\n  `SRAM gx`                 = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram gx\") %>% as.numeric(),\n  `SRAM nx`                 = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram nx\") %>% as.numeric(),\n  `SRAM sx`                 = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram sx\") %>% as.numeric(),\n  `SRAM sx`                 = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"sram sx\") %>% as.numeric(),\n  `Campagnolo potenza`      = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"campagnolo potenza\") %>% as.numeric(),\n  `Campagnolo super record` = `Rear Derailleur` %>% str_to_lower() %>% str_detect(\"campagnolo super record\") %>% as.numeric(),\n  `shimano nexus`           = `Shift Lever`     %>% str_to_lower() %>% str_detect(\"shimano nexus\") %>% as.numeric(),\n  `shimano alfine`          = `Shift Lever`     %>% str_to_lower() %>% str_detect(\"shimano alfine\") %>% as.numeric()\n) %>%\n  # Remove original columns\n  select(-c(`Rear Derailleur`, `Shift Lever`, `url`)) %>%\n  # Set all NAs to 0\n  mutate_if(is.numeric, ~replace(., is.na(.), 0))\n\n# Split data into training and testing sets\nset.seed(1123)  # For reproducibility\ndata_split <- initial_split(bike_features_tbl, prop = 0.9)\ntrain_tbl <- training(data_split)\ntest_tbl <- testing(data_split) \n\n\n# Define model\nlinear_model <- linear_reg() %>%\n  set_engine(\"lm\")\n\nrecipe_obj <- recipe(price ~ ., data = train_tbl) %>% \n  step_rm(category_1, category_3, gender, weight) %>%\n  step_dummy(all_nominal(), -all_outcomes()) \n\n\n# Create workflow with recipe\nworkflow_obj <- workflow() %>%\n  add_recipe(recipe_obj) %>%\n  add_model(linear_model)\n\n\n# Fit workflow\nfit_workflow <- workflow_obj %>%\n  fit(data = train_tbl)\n\n\n# Make predictions using fitted workflow\npredictions <- predict(fit_workflow, new_data = test_tbl)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: ! There are new levels in a factor: `Endurace WMN AL Disc 7.0`, `Endurace CF SL\n#>   Disc 8.0 Di2`, `Endurace CF 8.0`, `Inflite CF SL 8`, `Speedmax CF SLX 9.0\n#>   LTD`, `Speedmax WMN CF 7.0`, `Ultimate WMN CF SL Disc 7.0`, `Exceed CF SLX\n#>   9.0 Race`, `Exceed CF SLX 9.0`, `Lux CF SLX 9.0`, `Lux CF SL 6.0`, `Neuron CF\n#>   9 WMN`, `Spectral 6 WMN`, `Spectral:ON CF 7.0`, `Spectral:ON WMN CF 7.0`,\n#>   `Strive CF 7.0`, `Pathlite:ON 6.0`, `Commuter 5.0`, …, `Commuter 3.0`, and\n#>   `Pathlite 5 WMN`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in predict.lm(object = object$fit, newdata = new_data, type =\n#> \"response\", : prediction from rank-deficient fit; consider predict(.,\n#> rankdeficient=\"NA\")\n```\n:::\n\n```{.r .cell-code}\n# Calculate metrics\nmetrics <- predictions %>% \n  bind_cols(test_tbl %>% select(price)) %>%\n  yardstick::metrics(truth = price, estimate = .pred)\n\n\n# Print metrics\nprint(metrics)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> # A tibble: 3 × 3\n#>   .metric .estimator .estimate\n#>   <chr>   <chr>          <dbl>\n#> 1 rmse    standard       107. \n#> 2 rsq     standard         1  \n#> 3 mae     standard        95.0\n```\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}